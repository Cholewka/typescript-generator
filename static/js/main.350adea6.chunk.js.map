{"version":3,"sources":["typings/index.ts","steps/ChoosePreset.tsx","questions.ts","components/Input.tsx","components/Option.tsx","steps/CompilerOptions.tsx","steps/Ending.tsx","components/App.tsx","index.tsx"],"names":["Preset","Steps","ChoosePresetSettings","ChoosePreset","nextStep","setPreset","presets","name","description","presetCode","RECOMMENDED","NODE10","NODE12","DENO","REACT_NATIVE","SVELTE","FROM_SCRATCH","className","map","key","onClick","questions","compilerOptions","values","defaultValue","undefined","recommended","node10","node12","deno","reactnative","svelte","scratch","Input","keyString","presetValue","value","selectedValue","setValue","hasChanged","setHasChanged","updateOption","updateOptions","currentStep","options","currentInput","isPresetOption","isSelected","type","id","defaultChecked","htmlFor","newArray","newValue","Option","item","preset","useState","setSelectedValue","href","target","title","dangerouslySetInnerHTML","__html","replace","Math","random","toString","substr","randomizedValue","CompilerOptionsSettings","CompilerOptions","COMPILER_OPTIONS","renderItems","useCallback","idx","EndingSettings","Ending","fallback","generatedArray","steps","i","forEach","length","language","style","docco","JSON","stringify","renderRetrievedQuestions","App","setCurrentStep","UNDEFINED","index","descriptions","max","Fragment","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.350adea6.chunk.js","sourcesContent":["export interface Settings {\n  description: string;\n}\n\nexport enum Preset {\n  UNDEFINED = \"undefined\",\n  RECOMMENDED = \"recommended\",\n  NODE10 = \"node10\",\n  NODE12 = \"node12\",\n  DENO = \"deno\",\n  REACT_NATIVE = \"reactnative\",\n  SVELTE = \"svelte\",\n  FROM_SCRATCH = \"scratch\",\n}\n\nexport interface Question {\n  name: string;\n  description: string;\n  values: string[];\n  defaultValue: string;\n  presets: {\n    undefined: string;\n    recommended: string;\n    node10: string;\n    node12: string;\n    deno: string;\n    reactnative: string;\n    svelte: string;\n    scratch: string;\n  };\n\n  // optionals\n  selectedValue?: string | boolean;\n}\n\nexport interface Questions {\n  [key: string]: Question[];\n}\n\nexport enum Steps {\n  COMPILER_OPTIONS = \"compilerOptions\",\n}\n","import React from \"react\";\nimport { Settings, Preset } from \"../typings\";\n\nexport const ChoosePresetSettings: Settings = {\n  description:\n    \"Do you want to start creating a configuration file from a preset?\",\n};\n\ntype ChoosePresetProps = {\n  nextStep: () => void;\n  setPreset: (preset: Preset) => void;\n};\n\nfunction ChoosePreset({ nextStep, setPreset }: ChoosePresetProps) {\n  const presets = [\n    {\n      name: \"Recommended\",\n      description: \"The recommended base for TSConfig.\",\n      presetCode: Preset.RECOMMENDED,\n    },\n    {\n      name: \"Node 10\",\n      description: \"A base TSConfig for working with Node 10.\",\n      presetCode: Preset.NODE10,\n    },\n    {\n      name: \"Node 12\",\n      description: \"A base TSConfig for working with Node 12.\",\n      presetCode: Preset.NODE12,\n    },\n    {\n      name: \"Deno\",\n      description: \"A base TSConfig for working with Deno.\",\n      presetCode: Preset.DENO,\n    },\n    {\n      name: \"React Native\",\n      description: \"A base TSConfig for working with React Native.\",\n      presetCode: Preset.REACT_NATIVE,\n    },\n    {\n      name: \"Svelte\",\n      description: \"A base TSConfig for working with Svelte.\",\n      presetCode: Preset.SVELTE,\n    },\n    {\n      name: \"Starting from scratch\",\n      description: \"I want to set all the options by myself.\",\n      presetCode: Preset.FROM_SCRATCH,\n    },\n  ];\n\n  return (\n    <section className=\"app-grid-item\">\n      {presets.map(({ name, description, presetCode }) => (\n        <div\n          key={name}\n          className=\"section-block\"\n          onClick={() => {\n            nextStep();\n            setPreset(presetCode);\n          }}\n        >\n          <h2 className=\"block-heading\">{name}</h2>\n          <p className=\"block-paragraph\">{description}</p>\n        </div>\n      ))}\n    </section>\n  );\n}\n\nexport default ChoosePreset;\n","import { Questions } from \"./typings\";\n\n// prettier-ignore\nconst questions: Questions = {\n  compilerOptions: [\n    {\n      name: \"target\",\n      description: \"Specify ECMAScript target version.\",\n      values: [\"ES3\", \"ES5\", \"ES2015\", \"ES2016\", \"ES2017\", \"ES2018\", \"ES2019\", \"ES2020\", \"ESNext\"],\n      defaultValue: \"ES3\",\n      presets: {\n        undefined: \"ES3\",\n        recommended: \"ES2015\",\n        node10: \"ES2018\",\n        node12: \"ES2019\",\n        deno: \"ES3\",\n        reactnative: \"ES3\",\n        svelte: \"ES2017\",\n        scratch: \"ES3\",\n      },\n    },\n    {\n      name: \"module\",\n      description: \"Specify module code generation. Only 'AMD' and 'System' can be used in conjunction with --outFile.\",\n      values: [\"CommonJS\", \"AMD\", \"System\", \"UMD\", \"ES6\", \"ES2015\", \"ES2020\", \"ESNext\"],\n      defaultValue: \"CommonJS or ES6/ES2015\",\n      presets: {\n        undefined: \"CommonJS\",\n        recommended: \"CommonJS\",\n        node10: \"CommonJS\",\n        node12: \"CommonJS\",\n        deno: \"CommonJS\",\n        reactnative: \"CommonJS\",\n        svelte: \"CommonJS\",\n        scratch: \"CommonJS\"\n      }\n    },\n    {\n      name: \"strict\",\n      description: \"Enable all strict type checking options. Requires TypeScript version 2.3 or later.\",\n      values: [\"true\", \"false\"],\n      defaultValue: \"false\",\n      presets: {\n        undefined: \"false\",\n        recommended: \"true\",\n        node10: \"true\",\n        node12: \"true\",\n        deno: \"true\",\n        reactnative: \"false\",\n        svelte: \"false\",\n        scratch: \"false\"\n      }\n    },\n    {\n      name: \"esModuleInterop\",\n      description: \"No short description available. Important: if this option is turn on, the %MONOSPACE%allowSynthethicDefaultImports%STOPMONOSPACE% option will be turn on, too.\",\n      values: [\"true\", \"false\"],\n      defaultValue: \"false\",\n      presets: {\n        undefined: \"false\",\n        recommended: \"true\",\n        node10: \"true\",\n        node12: \"true\",\n        deno: \"false\",\n        reactnative: \"false\",\n        svelte: \"true\",\n        scratch: \"false\"\n      }\n    },\n    {\n      name: \"skipLibCheck\",\n      description: \"Skip type checking of declaration files (d.ts).\",\n      values: [\"true\", \"false\"],\n      defaultValue: \"false\",\n      presets: {\n        undefined: \"false\",\n        recommended: \"true\",\n        node10: \"true\",\n        node12: \"true\",\n        deno: \"false\",\n        reactnative: \"false\",\n        svelte: \"true\",\n        scratch: \"false\"\n      }\n    }\n\n  ],\n};\n\nexport default questions;\n","import React from \"react\";\nimport { Questions } from \"../typings\";\n\ntype InputProps = {\n  keyString: string;\n  presetValue: string;\n  value: string;\n  selectedValue: string | boolean | null;\n  setValue: (newValue: string) => void;\n  hasChanged: boolean;\n  setHasChanged: React.Dispatch<React.SetStateAction<boolean>>;\n  updateOption: (\n    options: Questions,\n    updateOptions: React.Dispatch<React.SetStateAction<Questions>>,\n    currentStep: string,\n    currentInput: number,\n    selectedValue: string,\n    presetValue: string\n  ) => void;\n  updateOptions: React.Dispatch<React.SetStateAction<Questions>>;\n  currentStep: string;\n  options: Questions;\n  currentInput: number;\n};\n\nfunction Input({\n  keyString,\n  presetValue,\n  value,\n  selectedValue,\n  setValue,\n  hasChanged,\n  setHasChanged,\n  updateOption,\n  updateOptions,\n  currentStep,\n  options,\n  currentInput,\n}: InputProps) {\n  let isPresetOption: boolean = false;\n  let isSelected: boolean = false;\n  if (value === \"None\") return null;\n  if (value === selectedValue) isSelected = true;\n  if (value === presetValue) isPresetOption = true;\n  function handleInputClick() {\n    setValue(value);\n    setHasChanged(true);\n    updateOption(\n      options,\n      updateOptions,\n      currentStep,\n      currentInput,\n      value,\n      presetValue\n    );\n  }\n  return (\n    <div key={keyString} onClick={handleInputClick}>\n      <input\n        type=\"radio\"\n        id={keyString}\n        value={keyString}\n        defaultChecked={\n          isSelected ? true : !hasChanged ? isPresetOption : false\n        }\n      />\n      <label className=\"block-label\" htmlFor={keyString}>\n        {value}\n      </label>\n    </div>\n  );\n}\n\nexport default Input;\n","import React, { useState } from \"react\";\nimport { Question, Preset, Questions } from \"../typings\";\n\nimport Input from \"./Input\";\n\ntype OptionProps = {\n  item: Question;\n  preset: Preset;\n  options: Questions;\n  updateOptions: React.Dispatch<React.SetStateAction<Questions>>;\n  currentStep: string;\n  currentInput: number;\n};\n\nfunction randomizedValue(value: string): string {\n  return `${value}_${Math.random().toString(36).substr(2, 9)}`;\n}\n\nfunction updateOption(\n  options: Questions,\n  updateOptions: React.Dispatch<React.SetStateAction<Questions>>,\n  currentStep: string,\n  currentInput: number,\n  selectedValue: string,\n  presetValue: string\n) {\n  const newArray = options;\n  let newValue: string | boolean = selectedValue || presetValue;\n  if (newValue === \"true\") newValue = true;\n  if (newValue === \"false\") newValue = false;\n  newArray[currentStep][currentInput].selectedValue = newValue;\n  updateOptions(newArray);\n}\n\nfunction Option({\n  item,\n  options,\n  updateOptions,\n  preset,\n  currentStep,\n  currentInput,\n}: OptionProps) {\n  const { name, description, values, defaultValue, presets } = item;\n  const [selectedValue, setSelectedValue] = useState<string>(presets[preset]);\n  const [hasChanged, setHasChanged] = useState<boolean>(false);\n  return (\n    <div key={name} className=\"section-block input-block\">\n      <h2 className=\"block-heading\">{name}</h2>\n      <p className=\"block-headline\">\n        Default: <span className=\"monospace\">{defaultValue}</span>\n        <a\n          href={\"https://www.typescriptlang.org/tsconfig#\" + name}\n          target=\"blank\"\n          title=\"TypeScript reference\"\n          className=\"block-referencelink\"\n        >\n          <span>REF</span>\n        </a>\n      </p>\n      <p\n        className=\"block-paragraph\"\n        dangerouslySetInnerHTML={{\n          __html: description\n            .replace(\"%MONOSPACE%\", `<span class=\"monospace\">`)\n            .replace(\"%STOPMONOSPACE%\", \"</span>\"),\n        }}\n      />\n      <form className=\"block-form\">\n        <div className=\"block-grid\">\n          {values.map((value) => {\n            const key = randomizedValue(value);\n            return (\n              <Input\n                key={key}\n                keyString={key}\n                presetValue={presets[preset]}\n                value={value}\n                selectedValue={selectedValue}\n                setValue={setSelectedValue}\n                hasChanged={hasChanged}\n                setHasChanged={setHasChanged}\n                updateOption={updateOption}\n                updateOptions={updateOptions}\n                currentStep={currentStep}\n                options={options}\n                currentInput={currentInput}\n              />\n            );\n          })}\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Option;\n","import React, { useCallback } from \"react\";\nimport { Preset, Settings, Questions, Steps } from \"../typings\";\n\nimport questions from \"../questions\";\n\nimport Option from \"../components/Option\";\n\nexport const CompilerOptionsSettings: Settings = {\n  description:\n    'Let\\'s set the \"compilerOptions\" values. Hover over the options to get more informations about them.',\n};\n\ntype CompilerOptionsProps = {\n  preset: Preset;\n  options: Questions;\n  updateOptions: React.Dispatch<React.SetStateAction<Questions>>;\n};\n\nfunction CompilerOptions({\n  preset,\n  options,\n  updateOptions,\n}: CompilerOptionsProps) {\n  const currentStep = Steps.COMPILER_OPTIONS;\n  const renderItems = useCallback(() => {\n    return questions.compilerOptions.map((item, idx) => {\n      return (\n        <Option\n          updateOptions={updateOptions}\n          options={options}\n          item={item}\n          preset={preset}\n          key={idx}\n          currentInput={idx}\n          currentStep={currentStep}\n        />\n      );\n    });\n  }, [preset, options, updateOptions, currentStep]);\n\n  return <section className=\"app-grid-item\">{renderItems()}</section>;\n}\n\nexport default CompilerOptions;\n","import React, { Suspense } from \"react\";\nimport { Settings, Questions, Steps } from \"../typings\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\nexport const EndingSettings: Settings = {\n  description:\n    \"Your journey has ended here. You can now generate the configuration file.\",\n};\n\ntype EndingProps = {\n  questions: Questions;\n};\n\nfunction Ending({ questions }: EndingProps) {\n  function renderRetrievedQuestions(questions: Questions) {\n    let generatedArray: any = {};\n    const steps = [Steps.COMPILER_OPTIONS];\n    for (let i = 0; i < steps.length; i++) {\n      generatedArray[steps[i]] = {};\n      questions[steps[i]].forEach((value) => {\n        if (\n          value.selectedValue === value.defaultValue ||\n          value.selectedValue === undefined\n        )\n          return;\n        generatedArray[steps[i]][value.name] = value.selectedValue;\n      });\n    }\n    return (\n      <SyntaxHighlighter\n        language=\"json\"\n        style={docco}\n        className=\"section-endingvalue\"\n      >\n        {JSON.stringify(generatedArray, null, 2)}\n      </SyntaxHighlighter>\n    );\n  }\n\n  return (\n    <section className=\"app-grid-item\">\n      <div className=\"section-block input-block\">\n        <h1 className=\"block-heading\">Generated configuration file</h1>\n        <p className=\"block-paragraph\">\n          Thank you for using our application! Your configuration file is being\n          created.\n        </p>\n        <p className=\"block-paragraph\">\n          Have you encountered any undesirable behaviour? Please let us know by{\" \"}\n          <a\n            className=\"block-link\"\n            href=\"https://github.com/cholewka/typescript-generator/issues/new\"\n          >\n            submitting an issue\n          </a>{\" \"}\n          on our GitHub repository.{\" \"}\n        </p>\n        <p className=\"block-paragraph\">This app is still under development.</p>\n        <hr className=\"section-divider\" />\n        <Suspense\n          fallback={\n            <p className=\"block-paragraph\">\n              We're retrieving your selected inputs...\n            </p>\n          }\n        >\n          {renderRetrievedQuestions(questions)}\n        </Suspense>\n      </div>\n    </section>\n  );\n}\n\nexport default Ending;\n","import React, { useState, Suspense } from \"react\";\nimport { Preset, Questions, Steps, Question } from \"../typings\";\n\nimport ChoosePreset, { ChoosePresetSettings } from \"../steps/ChoosePreset\";\nimport CompilerOptions, {\n  CompilerOptionsSettings,\n} from \"../steps/CompilerOptions\";\nimport Ending, { EndingSettings } from \"../steps/Ending\";\n\nimport questions from \"../questions\";\n\nfunction App() {\n  const [currentStep, setCurrentStep] = useState<number>(0);\n  const [preset, setPreset] = useState<Preset>(Preset.UNDEFINED);\n  const [options, updateOptions] = useState<Questions>(questions);\n\n  const nextStep = () => setCurrentStep(currentStep + 1);\n  const previousStep = () => {\n    if (currentStep === 0) return;\n    setCurrentStep(currentStep - 1);\n  };\n  const setPresetMethod = (preset: Preset) => {\n    setPreset(preset);\n    let newArray: Questions = questions;\n    const steps = [Steps.COMPILER_OPTIONS];\n    for (let i = 0; i < steps.length; i++) {\n      newArray[steps[i]].forEach((value: Question, index: number) => {\n        let newValue: string | boolean = value.presets[preset];\n        if (newValue === \"true\") newValue = true;\n        if (newValue === \"false\") newValue = false;\n        newArray[steps[i]][index].selectedValue = newValue;\n      });\n    }\n    updateOptions(newArray);\n  };\n\n  const steps = [\n    <ChoosePreset nextStep={nextStep} setPreset={setPresetMethod} />,\n    <CompilerOptions\n      preset={preset}\n      options={options}\n      updateOptions={updateOptions}\n    />,\n    <Ending questions={questions} />,\n  ];\n\n  const descriptions = [\n    ChoosePresetSettings.description,\n    CompilerOptionsSettings.description,\n    EndingSettings.description,\n  ];\n\n  return (\n    <div className=\"app-container\">\n      <main className=\"app-grid\">\n        <section className=\"app-grid-item app-side\">\n          <h2 className=\"section-heading\">\n            TypeScript configuration file creation process\n          </h2>\n          <p className=\"section-paragraph\">{descriptions[currentStep]}</p>\n          <hr className=\"section-divider\" />\n          <p className=\"section-step\">\n            Current step: {currentStep + 1}. out of {steps.length}\n          </p>\n          <progress\n            className=\"section-progressbar\"\n            value={currentStep + 1}\n            max={steps.length}\n          />\n          {currentStep > 0 ? (\n            <React.Fragment>\n              <hr className=\"section-divider\" />\n              <div className=\"section-links\">\n                <button onClick={previousStep}>Previous step</button>\n                {currentStep < steps.length - 1 ? (\n                  <button onClick={nextStep} className=\"primary\">\n                    Next step\n                  </button>\n                ) : null}\n              </div>\n            </React.Fragment>\n          ) : null}\n        </section>\n        <Suspense fallback={<p>Loading!</p>}>{steps[currentStep]}</Suspense>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles/index.scss\";\n\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}