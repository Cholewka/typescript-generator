{"version":3,"sources":["typings/index.ts","steps/ChoosePreset.tsx","questions.ts","components/Input.tsx","components/Option.tsx","steps/CompilerOptions.tsx","steps/Ending.tsx","components/App.tsx","index.tsx"],"names":["Preset","Steps","ChoosePresetSettings","ChoosePreset","nextStep","setPreset","presets","name","description","presetCode","RECOMMENDED","NODE10","NODE12","DENO","REACT_NATIVE","SVELTE","FROM_SCRATCH","className","map","key","onClick","questions","compilerOptions","values","defaultValue","undefined","recommended","node10","node12","deno","reactnative","svelte","scratch","Input","keyString","presetValue","value","selectedValue","setValue","hasChanged","setHasChanged","updateOption","updateOptions","currentStep","options","currentInput","isPresetOption","isSelected","type","id","defaultChecked","htmlFor","newArray","newValue","Option","item","preset","useState","setSelectedValue","href","target","title","dangerouslySetInnerHTML","__html","replace","Math","random","toString","substr","randomizedValue","CompilerOptionsSettings","CompilerOptions","COMPILER_OPTIONS","renderItems","useCallback","idx","EndingSettings","Ending","fallback","generatedArray","steps","i","forEach","length","language","style","docco","JSON","stringify","renderRetrievedQuestions","App","setCurrentStep","UNDEFINED","index","descriptions","max","Fragment","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.871049e0.chunk.js","sourcesContent":["export interface Settings {\r\n  description: string;\r\n}\r\n\r\nexport enum Preset {\r\n  UNDEFINED = \"undefined\",\r\n  RECOMMENDED = \"recommended\",\r\n  NODE10 = \"node10\",\r\n  NODE12 = \"node12\",\r\n  DENO = \"deno\",\r\n  REACT_NATIVE = \"reactnative\",\r\n  SVELTE = \"svelte\",\r\n  FROM_SCRATCH = \"scratch\",\r\n}\r\n\r\nexport interface Question {\r\n  name: string;\r\n  description: string;\r\n  values: string[];\r\n  defaultValue: string;\r\n  presets: {\r\n    undefined: string;\r\n    recommended: string;\r\n    node10: string;\r\n    node12: string;\r\n    deno: string;\r\n    reactnative: string;\r\n    svelte: string;\r\n    scratch: string;\r\n  };\r\n\r\n  // optionals\r\n  selectedValue?: string | boolean;\r\n}\r\n\r\nexport interface Questions {\r\n  [key: string]: Question[];\r\n}\r\n\r\nexport enum Steps {\r\n  COMPILER_OPTIONS = \"compilerOptions\",\r\n}\r\n","import React from \"react\";\r\nimport { Settings, Preset } from \"../typings\";\r\n\r\nexport const ChoosePresetSettings: Settings = {\r\n  description:\r\n    \"Do you want to start creating a configuration file from a preset?\",\r\n};\r\n\r\ntype ChoosePresetProps = {\r\n  nextStep: () => void;\r\n  setPreset: (preset: Preset) => void;\r\n};\r\n\r\nfunction ChoosePreset({ nextStep, setPreset }: ChoosePresetProps) {\r\n  const presets = [\r\n    {\r\n      name: \"Recommended\",\r\n      description: \"The recommended base for TSConfig.\",\r\n      presetCode: Preset.RECOMMENDED,\r\n    },\r\n    {\r\n      name: \"Node 10\",\r\n      description: \"A base TSConfig for working with Node 10.\",\r\n      presetCode: Preset.NODE10,\r\n    },\r\n    {\r\n      name: \"Node 12\",\r\n      description: \"A base TSConfig for working with Node 12.\",\r\n      presetCode: Preset.NODE12,\r\n    },\r\n    {\r\n      name: \"Deno\",\r\n      description: \"A base TSConfig for working with Deno.\",\r\n      presetCode: Preset.DENO,\r\n    },\r\n    {\r\n      name: \"React Native\",\r\n      description: \"A base TSConfig for working with React Native.\",\r\n      presetCode: Preset.REACT_NATIVE,\r\n    },\r\n    {\r\n      name: \"Svelte\",\r\n      description: \"A base TSConfig for working with Svelte.\",\r\n      presetCode: Preset.SVELTE,\r\n    },\r\n    {\r\n      name: \"Starting from scratch\",\r\n      description: \"I want to set all the options by myself.\",\r\n      presetCode: Preset.FROM_SCRATCH,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <section className=\"app-grid-item\">\r\n      {presets.map(({ name, description, presetCode }) => (\r\n        <div\r\n          key={name}\r\n          className=\"section-block\"\r\n          onClick={() => {\r\n            nextStep();\r\n            setPreset(presetCode);\r\n          }}\r\n        >\r\n          <h2 className=\"block-heading\">{name}</h2>\r\n          <p className=\"block-paragraph\">{description}</p>\r\n        </div>\r\n      ))}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ChoosePreset;\r\n","import { Questions } from \"./typings\";\r\n\r\n// prettier-ignore\r\nconst questions: Questions = {\r\n  compilerOptions: [\r\n    {\r\n      name: \"target\",\r\n      description: \"Specify ECMAScript target version.\",\r\n      values: [\"ES3\", \"ES5\", \"ES2015\", \"ES2016\", \"ES2017\", \"ES2018\", \"ES2019\", \"ES2020\", \"ESNext\"],\r\n      defaultValue: \"ES3\",\r\n      presets: {\r\n        undefined: \"ES3\",\r\n        recommended: \"ES2015\",\r\n        node10: \"ES2018\",\r\n        node12: \"ES2019\",\r\n        deno: \"ES3\",\r\n        reactnative: \"ES3\",\r\n        svelte: \"ES2017\",\r\n        scratch: \"ES3\",\r\n      },\r\n    },\r\n    {\r\n      name: \"module\",\r\n      description: \"Specify module code generation. Only 'AMD' and 'System' can be used in conjunction with --outFile.\",\r\n      values: [\"CommonJS\", \"AMD\", \"System\", \"UMD\", \"ES6\", \"ES2015\", \"ES2020\", \"ESNext\"],\r\n      defaultValue: \"CommonJS or ES6/ES2015\",\r\n      presets: {\r\n        undefined: \"CommonJS\",\r\n        recommended: \"CommonJS\",\r\n        node10: \"CommonJS\",\r\n        node12: \"CommonJS\",\r\n        deno: \"CommonJS\",\r\n        reactnative: \"CommonJS\",\r\n        svelte: \"CommonJS\",\r\n        scratch: \"CommonJS\"\r\n      }\r\n    },\r\n    {\r\n      name: \"strict\",\r\n      description: \"Enable all strict type checking options. Requires TypeScript version 2.3 or later.\",\r\n      values: [\"true\", \"false\"],\r\n      defaultValue: \"false\",\r\n      presets: {\r\n        undefined: \"false\",\r\n        recommended: \"true\",\r\n        node10: \"true\",\r\n        node12: \"true\",\r\n        deno: \"true\",\r\n        reactnative: \"false\",\r\n        svelte: \"false\",\r\n        scratch: \"false\"\r\n      }\r\n    },\r\n    {\r\n      name: \"esModuleInterop\",\r\n      description: \"No short description available. Important: if this option is turn on, the %MONOSPACE%allowSynthethicDefaultImports%STOPMONOSPACE% option will be turn on, too.\",\r\n      values: [\"true\", \"false\"],\r\n      defaultValue: \"false\",\r\n      presets: {\r\n        undefined: \"false\",\r\n        recommended: \"true\",\r\n        node10: \"true\",\r\n        node12: \"true\",\r\n        deno: \"false\",\r\n        reactnative: \"false\",\r\n        svelte: \"true\",\r\n        scratch: \"false\"\r\n      }\r\n    },\r\n    {\r\n      name: \"skipLibCheck\",\r\n      description: \"Skip type checking of declaration files (d.ts).\",\r\n      values: [\"true\", \"false\"],\r\n      defaultValue: \"false\",\r\n      presets: {\r\n        undefined: \"false\",\r\n        recommended: \"true\",\r\n        node10: \"true\",\r\n        node12: \"true\",\r\n        deno: \"false\",\r\n        reactnative: \"false\",\r\n        svelte: \"true\",\r\n        scratch: \"false\"\r\n      }\r\n    }\r\n\r\n  ],\r\n};\r\n\r\nexport default questions;\r\n","import React from \"react\";\r\nimport { Questions } from \"../typings\";\r\n\r\ntype InputProps = {\r\n  keyString: string;\r\n  presetValue: string;\r\n  value: string;\r\n  selectedValue: string | boolean | null;\r\n  setValue: (newValue: string) => void;\r\n  hasChanged: boolean;\r\n  setHasChanged: React.Dispatch<React.SetStateAction<boolean>>;\r\n  updateOption: (\r\n    options: Questions,\r\n    updateOptions: React.Dispatch<React.SetStateAction<Questions>>,\r\n    currentStep: string,\r\n    currentInput: number,\r\n    selectedValue: string,\r\n    presetValue: string\r\n  ) => void;\r\n  updateOptions: React.Dispatch<React.SetStateAction<Questions>>;\r\n  currentStep: string;\r\n  options: Questions;\r\n  currentInput: number;\r\n};\r\n\r\nfunction Input({\r\n  keyString,\r\n  presetValue,\r\n  value,\r\n  selectedValue,\r\n  setValue,\r\n  hasChanged,\r\n  setHasChanged,\r\n  updateOption,\r\n  updateOptions,\r\n  currentStep,\r\n  options,\r\n  currentInput,\r\n}: InputProps) {\r\n  let isPresetOption: boolean = false;\r\n  let isSelected: boolean = false;\r\n  if (value === \"None\") return null;\r\n  if (value === selectedValue) isSelected = true;\r\n  if (value === presetValue) isPresetOption = true;\r\n  function handleInputClick() {\r\n    setValue(value);\r\n    setHasChanged(true);\r\n    updateOption(\r\n      options,\r\n      updateOptions,\r\n      currentStep,\r\n      currentInput,\r\n      value,\r\n      presetValue\r\n    );\r\n  }\r\n  return (\r\n    <div key={keyString} onClick={handleInputClick}>\r\n      <input\r\n        type=\"radio\"\r\n        id={keyString}\r\n        value={keyString}\r\n        defaultChecked={\r\n          isSelected ? true : !hasChanged ? isPresetOption : false\r\n        }\r\n      />\r\n      <label className=\"block-label\" htmlFor={keyString}>\r\n        {value}\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import React, { useState } from \"react\";\r\nimport { Question, Preset, Questions } from \"../typings\";\r\n\r\nimport Input from \"./Input\";\r\n\r\ntype OptionProps = {\r\n  item: Question;\r\n  preset: Preset;\r\n  options: Questions;\r\n  updateOptions: React.Dispatch<React.SetStateAction<Questions>>;\r\n  currentStep: string;\r\n  currentInput: number;\r\n};\r\n\r\nfunction randomizedValue(value: string): string {\r\n  return `${value}_${Math.random().toString(36).substr(2, 9)}`;\r\n}\r\n\r\nfunction updateOption(\r\n  options: Questions,\r\n  updateOptions: React.Dispatch<React.SetStateAction<Questions>>,\r\n  currentStep: string,\r\n  currentInput: number,\r\n  selectedValue: string,\r\n  presetValue: string\r\n) {\r\n  const newArray = options;\r\n  let newValue: string | boolean = selectedValue || presetValue;\r\n  if (newValue === \"true\") newValue = true;\r\n  if (newValue === \"false\") newValue = false;\r\n  newArray[currentStep][currentInput].selectedValue = newValue;\r\n  updateOptions(newArray);\r\n}\r\n\r\nfunction Option({\r\n  item,\r\n  options,\r\n  updateOptions,\r\n  preset,\r\n  currentStep,\r\n  currentInput,\r\n}: OptionProps) {\r\n  const { name, description, values, defaultValue, presets } = item;\r\n  const [selectedValue, setSelectedValue] = useState<string>(presets[preset]);\r\n  const [hasChanged, setHasChanged] = useState<boolean>(false);\r\n  return (\r\n    <div key={name} className=\"section-block input-block\">\r\n      <h2 className=\"block-heading\">{name}</h2>\r\n      <p className=\"block-headline\">\r\n        Default: <span className=\"monospace\">{defaultValue}</span>\r\n        <a\r\n          href={\"https://www.typescriptlang.org/tsconfig#\" + name}\r\n          target=\"blank\"\r\n          title=\"TypeScript reference\"\r\n          className=\"block-referencelink\"\r\n        >\r\n          <span>REF</span>\r\n        </a>\r\n      </p>\r\n      <p\r\n        className=\"block-paragraph\"\r\n        dangerouslySetInnerHTML={{\r\n          __html: description\r\n            .replace(\"%MONOSPACE%\", `<span class=\"monospace\">`)\r\n            .replace(\"%STOPMONOSPACE%\", \"</span>\"),\r\n        }}\r\n      />\r\n      <form className=\"block-form\">\r\n        <div className=\"block-grid\">\r\n          {values.map((value) => {\r\n            const key = randomizedValue(value);\r\n            return (\r\n              <Input\r\n                key={key}\r\n                keyString={key}\r\n                presetValue={presets[preset]}\r\n                value={value}\r\n                selectedValue={selectedValue}\r\n                setValue={setSelectedValue}\r\n                hasChanged={hasChanged}\r\n                setHasChanged={setHasChanged}\r\n                updateOption={updateOption}\r\n                updateOptions={updateOptions}\r\n                currentStep={currentStep}\r\n                options={options}\r\n                currentInput={currentInput}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Option;\r\n","import React, { useCallback } from \"react\";\r\nimport { Preset, Settings, Questions, Steps } from \"../typings\";\r\n\r\nimport questions from \"../questions\";\r\n\r\nimport Option from \"../components/Option\";\r\n\r\nexport const CompilerOptionsSettings: Settings = {\r\n  description:\r\n    'Let\\'s set the \"compilerOptions\" values. Hover over the options to get more informations about them.',\r\n};\r\n\r\ntype CompilerOptionsProps = {\r\n  preset: Preset;\r\n  options: Questions;\r\n  updateOptions: React.Dispatch<React.SetStateAction<Questions>>;\r\n};\r\n\r\nfunction CompilerOptions({\r\n  preset,\r\n  options,\r\n  updateOptions,\r\n}: CompilerOptionsProps) {\r\n  const currentStep = Steps.COMPILER_OPTIONS;\r\n  const renderItems = useCallback(() => {\r\n    return questions.compilerOptions.map((item, idx) => {\r\n      return (\r\n        <Option\r\n          updateOptions={updateOptions}\r\n          options={options}\r\n          item={item}\r\n          preset={preset}\r\n          key={idx}\r\n          currentInput={idx}\r\n          currentStep={currentStep}\r\n        />\r\n      );\r\n    });\r\n  }, [preset, options, updateOptions, currentStep]);\r\n\r\n  return <section className=\"app-grid-item\">{renderItems()}</section>;\r\n}\r\n\r\nexport default CompilerOptions;\r\n","import React, { Suspense } from \"react\";\r\nimport { Settings, Questions, Steps } from \"../typings\";\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\n\r\nexport const EndingSettings: Settings = {\r\n  description:\r\n    \"Your journey has ended here. You can now generate the configuration file.\",\r\n};\r\n\r\ntype EndingProps = {\r\n  questions: Questions;\r\n};\r\n\r\nfunction Ending({ questions }: EndingProps) {\r\n  function renderRetrievedQuestions(questions: Questions) {\r\n    let generatedArray: any = {};\r\n    const steps = [Steps.COMPILER_OPTIONS];\r\n    for (let i = 0; i < steps.length; i++) {\r\n      generatedArray[steps[i]] = {};\r\n      questions[steps[i]].forEach((value) => {\r\n        if (\r\n          value.selectedValue === value.defaultValue ||\r\n          value.selectedValue === undefined\r\n        )\r\n          return;\r\n        generatedArray[steps[i]][value.name] = value.selectedValue;\r\n      });\r\n    }\r\n    return (\r\n      <SyntaxHighlighter\r\n        language=\"json\"\r\n        style={docco}\r\n        className=\"section-endingvalue\"\r\n      >\r\n        {JSON.stringify(generatedArray, null, 2)}\r\n      </SyntaxHighlighter>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <section className=\"app-grid-item\">\r\n      <div className=\"section-block input-block\">\r\n        <h1 className=\"block-heading\">Generated configuration file</h1>\r\n        <p className=\"block-paragraph\">\r\n          Thank you for using our application! Your configuration file is being\r\n          created.\r\n        </p>\r\n        <p className=\"block-paragraph\">\r\n          Have you encountered any undesirable behaviour? Please let us know by{\" \"}\r\n          <a\r\n            className=\"block-link\"\r\n            href=\"https://github.com/cholewka/typescript-generator/issues/new\"\r\n          >\r\n            submitting an issue\r\n          </a>{\" \"}\r\n          on our GitHub repository.{\" \"}\r\n        </p>\r\n        <p className=\"block-paragraph\">This app is still under development.</p>\r\n        <hr className=\"section-divider\" />\r\n        <Suspense\r\n          fallback={\r\n            <p className=\"block-paragraph\">\r\n              We're retrieving your selected inputs...\r\n            </p>\r\n          }\r\n        >\r\n          {renderRetrievedQuestions(questions)}\r\n        </Suspense>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Ending;\r\n","import React, { useState, Suspense } from \"react\";\r\nimport { Preset, Questions, Steps, Question } from \"../typings\";\r\n\r\nimport ChoosePreset, { ChoosePresetSettings } from \"../steps/ChoosePreset\";\r\nimport CompilerOptions, {\r\n  CompilerOptionsSettings,\r\n} from \"../steps/CompilerOptions\";\r\nimport Ending, { EndingSettings } from \"../steps/Ending\";\r\n\r\nimport questions from \"../questions\";\r\n\r\nfunction App() {\r\n  const [currentStep, setCurrentStep] = useState<number>(0);\r\n  const [preset, setPreset] = useState<Preset>(Preset.UNDEFINED);\r\n  const [options, updateOptions] = useState<Questions>(questions);\r\n\r\n  const nextStep = () => setCurrentStep(currentStep + 1);\r\n  const previousStep = () => {\r\n    if (currentStep === 0) return;\r\n    setCurrentStep(currentStep - 1);\r\n  };\r\n  const setPresetMethod = (preset: Preset) => {\r\n    setPreset(preset);\r\n    let newArray: Questions = questions;\r\n    const steps = [Steps.COMPILER_OPTIONS];\r\n    for (let i = 0; i < steps.length; i++) {\r\n      newArray[steps[i]].forEach((value: Question, index: number) => {\r\n        let newValue: string | boolean = value.presets[preset];\r\n        if (newValue === \"true\") newValue = true;\r\n        if (newValue === \"false\") newValue = false;\r\n        newArray[steps[i]][index].selectedValue = newValue;\r\n      });\r\n    }\r\n    updateOptions(newArray);\r\n  };\r\n\r\n  const steps = [\r\n    <ChoosePreset nextStep={nextStep} setPreset={setPresetMethod} />,\r\n    <CompilerOptions\r\n      preset={preset}\r\n      options={options}\r\n      updateOptions={updateOptions}\r\n    />,\r\n    <Ending questions={questions} />,\r\n  ];\r\n\r\n  const descriptions = [\r\n    ChoosePresetSettings.description,\r\n    CompilerOptionsSettings.description,\r\n    EndingSettings.description,\r\n  ];\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <main className=\"app-grid\">\r\n        <section className=\"app-grid-item app-side\">\r\n          <h2 className=\"section-heading\">\r\n            TypeScript configuration file creation process\r\n          </h2>\r\n          <p className=\"section-paragraph\">{descriptions[currentStep]}</p>\r\n          <hr className=\"section-divider\" />\r\n          <p className=\"section-step\">\r\n            Current step: {currentStep + 1}. out of {steps.length}\r\n          </p>\r\n          <progress\r\n            className=\"section-progressbar\"\r\n            value={currentStep + 1}\r\n            max={steps.length}\r\n          />\r\n          {currentStep > 0 ? (\r\n            <React.Fragment>\r\n              <hr className=\"section-divider\" />\r\n              <div className=\"section-links\">\r\n                <button onClick={previousStep}>Previous step</button>\r\n                {currentStep < steps.length - 1 ? (\r\n                  <button onClick={nextStep} className=\"primary\">\r\n                    Next step\r\n                  </button>\r\n                ) : null}\r\n              </div>\r\n            </React.Fragment>\r\n          ) : null}\r\n        </section>\r\n        <Suspense fallback={<p>Loading!</p>}>{steps[currentStep]}</Suspense>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./styles/index.scss\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}