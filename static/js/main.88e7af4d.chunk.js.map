{"version":3,"sources":["styles/Sidebar.module.scss","typings/index.ts","contexts/StepsContext.ts","components/SidebarHeading.tsx","components/SidebarParagraph.tsx","components/SidebarProgressbar.tsx","components/SidebarButtons.tsx","components/Sidebar.tsx","contexts/QuestionsContext.ts","components/OptionHeading.tsx","components/OptionParagraph.tsx","components/OptionInput.tsx","components/Option.tsx","components/Ending.tsx","data/steps.ts","components/Content.tsx","data/questions.ts","data/presets.ts","contexts/providers/QuestionsContextProvider.tsx","contexts/providers/StepsContextProvider.tsx","components/App.tsx","index.tsx","styles/Option.module.scss","styles/App.module.scss"],"names":["module","exports","Preset","StepEnum","StepsContext","createContext","SidebarHeading","children","className","styles","SidebarHeading_heading","SidebarParagraph","SidebarParagraph_paragraph","SidebarProgressbar","StepContext","React","useContext","currentStep","stepsCount","getStepsCount","Fragment","SidebarProgressbar_divider","SidebarProgressbar_paragraph","SidebarProgressbar_progressbar","value","max","SidebarButtons","showPreviousButton","showNextButton","handleClick","action","previousStep","nextStep","SidebarButtons_button","onClick","Sidebar","getStep","App_gridItem","App_sideItem","stepName","stepDescription","step","QuestionsContext","OptionHeading","Option_heading","OptionParagraph","Option_paragraph","OptionInput","type","heading","paragraph","values","defaultValue","useState","selectedAnswer","setSelectedAnswer","QuestionContext","renderText","Option_singlechoice","Option_checkboxcontainer","Option_checkbox","checked","getAnswers","getQuestionIndex","find","name","onChange","sendNewAnswer","toString","getSelectedAnswer","Option_select","map","idx","key","Option","inputType","clickEvent","isInputStep","Option_block","Option_inputblock","questionIndex","getQuestions","findIndex","getPresetForQuestion","getDefaultValue","undefined","Ending","href","sidebarStyles","language","style","docco","customStyle","backgroundColor","encodeURIComponent","download","Option_downloadbutton","steps","CHOOSING_PRESET","SELECTIONS","STRICT_CHECKS","MODULE_RESOLUTIONS","ADVANCED","ENDING","Content","getPresets","description","presetEnum","setPreset","setPresetsInAnswers","length","parseAnswers","getQuestionsFromIndex","inputValues","renderItems","questions","presets","recommended","node10","node12","deno","reactnative","svelte","scratch","RECOMMENDED","NODE10","NODE12","DENO","REACT_NATIVE","SVELTE","STARTING_FROM_SCRATCH","QuestionsContextProvider","props","state","categories","answers","selectedPreset","bind","getSelectedPreset","getFieldNameCategory","endingAnswersArray","endingCatagoriesArray","alreadyUsedKeys","forEach","push","setState","this","questionCategoryIndex","preset","_","questionKey","newPreset","getDefaultValueForQuestion","fieldName","index","answer","alreadyAnsweredField","endingAnswersField","parsedAnswer","JSON","stringify","Provider","Component","StepsContextProvider","App","App_container","App_grid","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88e7af4d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"SidebarHeading_heading\":\"Sidebar_SidebarHeading_heading__3afhy\",\"SidebarParagraph_paragraph\":\"Sidebar_SidebarParagraph_paragraph__3Sd53\",\"SidebarProgressbar_divider\":\"Sidebar_SidebarProgressbar_divider__25PLZ\",\"SidebarProgressbar_paragraph\":\"Sidebar_SidebarProgressbar_paragraph__2dyuv\",\"SidebarProgressbar_progressbar\":\"Sidebar_SidebarProgressbar_progressbar__nJagd\",\"SidebarButtons_button\":\"Sidebar_SidebarButtons_button__20DpI\"};","export enum Preset {\n  RECOMMENDED = \"recommended\",\n  NODE10 = \"node10\",\n  NODE12 = \"node12\",\n  DENO = \"deno\",\n  REACT_NATIVE = \"reactnative\",\n  SVELTE = \"svelte\",\n  STARTING_FROM_SCRATCH = \"scratch\",\n}\n\nexport interface QuestionsPresets {\n  [Preset.RECOMMENDED]: string;\n  [Preset.NODE10]: string;\n  [Preset.NODE12]: string;\n  [Preset.DENO]: string;\n  [Preset.REACT_NATIVE]: string;\n  [Preset.SVELTE]: string;\n  [Preset.STARTING_FROM_SCRATCH]: string;\n}\n\nexport type InputTypes = \"multipleChoice\" | \"singleChoice\";\n\nexport interface Question {\n  name: string;\n  description: string;\n  inputType: InputTypes;\n  values: string[];\n  defaultValue: string;\n  presets: QuestionsPresets;\n}\n\nexport type Questions = {\n  key: string;\n  values: Question[];\n}[];\n\nexport interface Answer {\n  name: string;\n  value: string | boolean;\n}\n\nexport type Answers = Answer[][];\n\nexport type ParsedAnswer = {\n  [key: string]: {\n    [key: string]: string | boolean;\n  };\n};\n\nexport type Presets = {\n  name: string;\n  description: string;\n  presetEnum: Preset;\n}[];\n\nexport enum StepEnum {\n  CHOOSING_PRESET = 0,\n  SELECTIONS = 1,\n  STRICT_CHECKS = 2,\n  MODULE_RESOLUTIONS = 3,\n  ADVANCED = 4,\n  ENDING = 5,\n}\n\nexport type Step = {\n  step: StepEnum;\n  stepName: string;\n  stepDescription: string;\n};\n\nexport type Steps = Step[];\n","import { createContext } from \"react\";\nimport { StepsContextProvidedState } from \"./providers/StepsContextProvider\";\n\nconst StepsContext = createContext<StepsContextProvidedState | null>(null);\n\nexport default StepsContext;\n","import React from \"react\";\nimport styles from \"../styles/Sidebar.module.scss\";\n\ntype SidebarHeadingProps = {\n  children: string;\n};\n\nconst SidebarHeading = ({ children }: SidebarHeadingProps) => (\n  <h1 className={styles.SidebarHeading_heading}>{children}</h1>\n);\n\nexport default SidebarHeading;\n","import React from \"react\";\nimport styles from \"../styles/Sidebar.module.scss\";\n\ntype SidebarHeadingProps = {\n  children: string;\n};\n\nconst SidebarParagraph = ({ children }: SidebarHeadingProps) => (\n  <p className={styles.SidebarParagraph_paragraph}>{children}</p>\n);\n\nexport default SidebarParagraph;\n","import React from \"react\";\nimport styles from \"../styles/Sidebar.module.scss\";\n\nimport StepsContext from \"../contexts/StepsContext\";\n\nconst SidebarProgressbar = () => {\n  const StepContext = React.useContext(StepsContext);\n  const currentStep = StepContext!.currentStep;\n  const stepsCount = StepContext!.getStepsCount();\n  return (\n    <React.Fragment>\n      <hr className={styles.SidebarProgressbar_divider} />\n      <p className={styles.SidebarProgressbar_paragraph}>\n        Current step: {currentStep + 1}. out of {stepsCount + 1}\n      </p>\n      <progress\n        className={styles.SidebarProgressbar_progressbar}\n        value={currentStep}\n        max={stepsCount}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default SidebarProgressbar;\n","import React from \"react\";\nimport styles from \"../styles/Sidebar.module.scss\";\n\nimport StepsContext from \"../contexts/StepsContext\";\n\ntype SidebarButtonsProps = {\n  showPreviousButton: boolean;\n  showNextButton: boolean;\n};\n\nconst SidebarButtons = ({\n  showPreviousButton,\n  showNextButton,\n}: SidebarButtonsProps) => {\n  const StepContext = React.useContext(StepsContext);\n\n  function handleClick(action: \"previous\" | \"next\"): void {\n    if (action === \"previous\") StepContext!.previousStep();\n    if (action === \"next\") StepContext!.nextStep();\n  }\n\n  const renderDivider = () =>\n    showPreviousButton || showNextButton ? (\n      <hr className={styles.SidebarProgressbar_divider} />\n    ) : null;\n  const renderPreviousButton = () =>\n    showPreviousButton ? (\n      <button\n        className={styles.SidebarButtons_button}\n        onClick={() => handleClick(\"previous\")}\n      >\n        Previous step\n      </button>\n    ) : null;\n  const renderNextButton = () =>\n    showNextButton ? (\n      <button\n        className={styles.SidebarButtons_button}\n        onClick={() => handleClick(\"next\")}\n      >\n        Next step\n      </button>\n    ) : null;\n  return (\n    <React.Fragment>\n      {renderDivider()}\n      {renderPreviousButton()}\n      {renderNextButton()}\n    </React.Fragment>\n  );\n};\n\nexport default SidebarButtons;\n","import React from \"react\";\n\nimport StepsContext from \"../contexts/StepsContext\";\n\nimport SidebarHeading from \"./SidebarHeading\";\nimport SidebarParagraph from \"./SidebarParagraph\";\nimport SidebarProgressbar from \"./SidebarProgressbar\";\nimport SidebarButtons from \"./SidebarButtons\";\n\nimport styles from \"../styles/App.module.scss\";\n\nconst Sidebar = () => {\n  const StepContext = React.useContext(StepsContext);\n  const currentStep = StepContext!.getStep();\n\n  return (\n    <section className={`${styles.App_gridItem} ${styles.App_sideItem}`}>\n      <SidebarHeading>{currentStep.stepName}</SidebarHeading>\n      <SidebarParagraph>{currentStep.stepDescription}</SidebarParagraph>\n      <SidebarProgressbar />\n      <SidebarButtons\n        showPreviousButton={currentStep.step > 0}\n        showNextButton={\n          currentStep.step !== 0 &&\n          currentStep.step < StepContext!.getStepsCount()\n        }\n      />\n    </section>\n  );\n};\n\nexport default Sidebar;\n","import { createContext } from \"react\";\nimport { QuestionsContextProvidedState } from \"./providers/QuestionsContextProvider\";\n\nconst QuestionsContext = createContext<QuestionsContextProvidedState | null>(\n  null\n);\n\nexport default QuestionsContext;\n","import React from \"react\";\nimport styles from \"../styles/Option.module.scss\";\n\ntype OptionHeadingTypes = {\n  children: string;\n};\n\nconst OptionHeading = ({ children }: OptionHeadingTypes) => (\n  <h2 className={styles.Option_heading}>{children}</h2>\n);\n\nexport default OptionHeading;\n","import React from \"react\";\nimport styles from \"../styles/Option.module.scss\";\n\ntype OptionParagraphTypes = {\n  children: string | JSX.Element;\n};\n\nconst OptionParagraph = ({ children }: OptionParagraphTypes) => (\n  <p className={styles.Option_paragraph}>{children}</p>\n);\n\nexport default OptionParagraph;\n","import React from \"react\";\nimport { InputTypes } from \"../typings\";\n\nimport styles from \"../styles/Option.module.scss\";\nimport OptionHeading from \"./OptionHeading\";\nimport OptionParagraph from \"./OptionParagraph\";\n\nimport QuestionsContext from \"../contexts/QuestionsContext\";\n\ntype OptionInputTypes = {\n  type: InputTypes | undefined;\n  heading: string;\n  paragraph: string;\n  values?: string[];\n  defaultValue?: string;\n};\n\nconst OptionInput = ({\n  type,\n  heading,\n  paragraph,\n  values,\n  defaultValue,\n}: OptionInputTypes) => {\n  const [selectedAnswer, setSelectedAnswer] = React.useState<boolean>(false);\n\n  const QuestionContext = React.useContext(QuestionsContext);\n\n  const renderText = () => (\n    <div>\n      <OptionHeading>{heading}</OptionHeading>\n      <OptionParagraph>{paragraph}</OptionParagraph>\n    </div>\n  );\n\n  function isSelectedAnswer(): boolean {\n    return QuestionContext!\n      .getAnswers()\n      [QuestionContext!.getQuestionIndex(heading)].find(\n        ({ name, value }) => name === heading && value === true\n      )\n      ? true\n      : false;\n  }\n\n  function getSelectedAnswer(): string {\n    return (\n      QuestionContext!\n        .getAnswers()\n        [QuestionContext!.getQuestionIndex(heading)].find(\n          ({ name }) => name === heading\n        )\n        ?.value.toString() || defaultValue!\n    );\n  }\n\n  return type === \"singleChoice\" ? (\n    <div className={styles.Option_singlechoice}>\n      <div className={styles.Option_checkboxcontainer}>\n        <input\n          type=\"checkbox\"\n          className={styles.Option_checkbox}\n          checked={isSelectedAnswer()}\n          onChange={() => {\n            QuestionContext!.sendNewAnswer(\n              QuestionContext!.getQuestionIndex(heading),\n              heading,\n              !selectedAnswer\n            );\n            setSelectedAnswer(!selectedAnswer);\n          }}\n        />\n      </div>\n      {renderText()}\n    </div>\n  ) : (\n    <div>\n      {renderText()}\n      {values ? (\n        <select\n          defaultValue={getSelectedAnswer()!}\n          className={styles.Option_select}\n        >\n          {values.map((value, idx) => (\n            <option\n              key={idx}\n              onClick={() => {\n                QuestionContext!.sendNewAnswer(\n                  QuestionContext!.getQuestionIndex(heading),\n                  heading,\n                  value\n                );\n              }}\n            >\n              {value}\n            </option>\n          ))}\n        </select>\n      ) : null}\n    </div>\n  );\n};\n\nexport default OptionInput;\n","import React from \"react\";\nimport { InputTypes } from \"../typings\";\n\nimport OptionInput from \"./OptionInput\";\n\nimport styles from \"../styles/Option.module.scss\";\n\nimport StepsContext from \"../contexts/StepsContext\";\nimport QuestionsContext from \"../contexts/QuestionsContext\";\n\ntype OptionProps = {\n  idx: number;\n  heading: string;\n  paragraph: string;\n  inputType?: InputTypes;\n  clickEvent?: () => void;\n  values?: string[];\n  defaultValue?: string;\n};\n\nconst Option = ({\n  heading,\n  paragraph,\n  inputType,\n  clickEvent,\n  values,\n  defaultValue,\n}: OptionProps) => {\n  const StepContext = React.useContext(StepsContext);\n  const QuestionContext = React.useContext(QuestionsContext);\n\n  const currentStep = StepContext!.currentStep;\n  const isInputStep = currentStep > 0;\n\n  function getDefaultValue(): string {\n    const questionIndex = QuestionContext!\n      .getQuestions()\n      [currentStep - 1].values.findIndex(({ name }) => name === heading);\n    return QuestionContext!.getPresetForQuestion(\n      currentStep - 1,\n      questionIndex\n    );\n  }\n\n  return (\n    <div\n      className={`${styles.Option_block} ${\n        isInputStep ? styles.Option_inputblock : null\n      }`}\n      onClick={clickEvent}\n    >\n      <OptionInput\n        heading={heading}\n        paragraph={paragraph}\n        type={inputType}\n        values={values}\n        defaultValue={currentStep > 0 ? getDefaultValue() : undefined}\n      />\n    </div>\n  );\n};\n\nexport default Option;\n","import React from \"react\";\n\nimport styles from \"../styles/Option.module.scss\";\nimport sidebarStyles from \"../styles/Sidebar.module.scss\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\nimport OptionHeading from \"./OptionHeading\";\nimport OptionParagraph from \"./OptionParagraph\";\n\ntype EndingTypes = {\n  children: any;\n};\n\nconst Ending = ({ children }: EndingTypes) => (\n  <div className={`${styles.Option_block} ${styles.Option_inputblock}`}>\n    <OptionHeading>Generated configuration file</OptionHeading>\n    <OptionParagraph>\n      Thank you for using our application! Your configuration file has been\n      created.\n    </OptionParagraph>\n    <OptionParagraph>\n      <React.Fragment>\n        Have you encountered any undesirable behaviour? Please let us know by{\" \"}\n        <a href=\"https://github.com/cholewka/typescript-generator/issues/new\">\n          submitting an issue\n        </a>{\" \"}\n        on our GitHub repository.\n      </React.Fragment>\n    </OptionParagraph>\n    <hr className={sidebarStyles.SidebarProgressbar_divider} />\n    <SyntaxHighlighter\n      language=\"json\"\n      style={docco}\n      customStyle={{ backgroundColor: \"#fff\" }}\n    >\n      {children}\n    </SyntaxHighlighter>\n    <hr className={sidebarStyles.SidebarProgressbar_divider} />\n    <a\n      href={`data:text/json;charset=utf-8,${encodeURIComponent(children)}`}\n      download=\"tsconfig.json\"\n      className={styles.Option_downloadbutton}\n    >\n      <button className={sidebarStyles.SidebarButtons_button}>\n        Save as tsconfig.json\n      </button>\n    </a>\n  </div>\n);\n\nexport default Ending;\n","import { Steps, StepEnum } from \"../typings\";\n\nconst steps: Steps = [\n  {\n    step: StepEnum.CHOOSING_PRESET,\n    stepName: \"Choosing preset\",\n    stepDescription:\n      \"Do you want to start creating a configuration file from a preset?\",\n  },\n  {\n    step: StepEnum.SELECTIONS,\n    stepName: \"Selections\",\n    stepDescription: \"Let's set the target and module options.\",\n  },\n  {\n    step: StepEnum.STRICT_CHECKS,\n    stepName: \"Strict checks\",\n    stepDescription: \"Let's see what parts of code will be strict-checked.\",\n  },\n  {\n    step: StepEnum.MODULE_RESOLUTIONS,\n    stepName: \"Module resolutions\",\n    stepDescription: \"Let's set the module resolutions.\",\n  },\n  {\n    step: StepEnum.ADVANCED,\n    stepName: \"Advanced options\",\n    stepDescription: \"Let's dive in into the advances.\",\n  },\n  {\n    step: StepEnum.ENDING,\n    stepName: \"Ending\",\n    stepDescription:\n      \"Your journey ends here. You can now get your generated code!\",\n  },\n];\n\nexport default steps;\n","import React from \"react\";\nimport { StepEnum } from \"../typings\";\n\nimport QuestionsContext from \"../contexts/QuestionsContext\";\nimport StepsContext from \"../contexts/StepsContext\";\n\nimport Option from \"./Option\";\nimport Ending from \"./Ending\";\n\nimport styles from \"../styles/App.module.scss\";\nimport steps from \"../data/steps\";\n\nconst Content = () => {\n  const QuestionContext = React.useContext(QuestionsContext);\n  const StepContext = React.useContext(StepsContext);\n\n  const renderItems = () => {\n    const currentStep = StepContext!.getStep();\n    if (currentStep.step === StepEnum.CHOOSING_PRESET) {\n      return QuestionContext!\n        .getPresets()\n        .map(({ name, description, presetEnum }, idx) => (\n          <Option\n            key={idx}\n            idx={idx}\n            heading={name}\n            paragraph={description}\n            clickEvent={() => {\n              StepContext!.nextStep();\n              QuestionContext!.setPreset(presetEnum);\n              QuestionContext!.setPresetsInAnswers(presetEnum);\n            }}\n          />\n        ));\n    } else if (currentStep.step === steps.length - 1) {\n      return <Ending>{QuestionContext!.parseAnswers()}</Ending>;\n    } else if (currentStep.step > 0) {\n      return QuestionContext!\n        .getQuestionsFromIndex(currentStep.step - 1)\n        .map(({ name, description, ...inputValues }, idx) => (\n          <Option\n            key={idx}\n            idx={idx}\n            heading={name}\n            paragraph={description}\n            {...inputValues}\n          />\n        ));\n    }\n  };\n\n  return <section className={styles.App_gridItem}>{renderItems()}</section>;\n};\nexport default Content;\n","import { Questions } from \"../typings\";\n\nconst questions: Questions = [\n  {\n    // Selections\n    key: \"compilerOptions\",\n    values: [\n      {\n        name: \"target\",\n        description:\n          \"Sets the JavaScript language version for emitted JavaScript and includes compatible library declarations.\",\n        inputType: \"multipleChoice\",\n        values: [\n          \"ES3\",\n          \"ES5\",\n          \"ES2015\",\n          \"ES2016\",\n          \"ES2017\",\n          \"ES2018\",\n          \"ES2019\",\n          \"ES2020\",\n          \"ESNext\",\n        ],\n        defaultValue: \"ES3\",\n        presets: {\n          recommended: \"ES2015\",\n          node10: \"ES2018\",\n          node12: \"ES2019\",\n          deno: \"ES3\",\n          reactnative: \"ES3\",\n          svelte: \"ES2017\",\n          scratch: \"ES3\",\n        },\n      },\n      {\n        name: \"module\",\n        description: \"Module code generation.\",\n        inputType: \"multipleChoice\",\n        values: [\n          \"CommonJS\",\n          \"AMD\",\n          \"System\",\n          \"UMD\",\n          \"ES6\",\n          \"ES2015\",\n          \"ES2020\",\n          \"ESNext\",\n        ],\n        defaultValue: \"CommonJS or ES6/ES2015\",\n        presets: {\n          recommended: \"CommonJS\",\n          node10: \"CommonJS\",\n          node12: \"CommonJS\",\n          deno: \"CommonJS\",\n          reactnative: \"CommonJS\",\n          svelte: \"CommonJS\",\n          scratch: \"CommonJS\",\n        },\n      },\n    ],\n  },\n  {\n    // Strict Checks\n    key: \"compilerOptions\",\n    values: [\n      {\n        name: \"strict\",\n        description:\n          \"Enable all strict type checking options. Requires TypeScript version 2.3 or later.\",\n        inputType: \"singleChoice\",\n        values: [\"true\", \"false\"],\n        defaultValue: \"false\",\n        presets: {\n          recommended: \"true\",\n          node10: \"true\",\n          node12: \"true\",\n          deno: \"true\",\n          reactnative: \"false\",\n          svelte: \"false\",\n          scratch: \"false\",\n        },\n      },\n    ],\n  },\n  {\n    // Module Resolutions\n    key: \"compilerOptions\",\n    values: [\n      {\n        name: \"esModuleInterop\",\n        description:\n          \"Emit additional JS to ease support for importing CommonJS modules, and enables `allowSyntheticDefaultImports` for type compatibility.\",\n        inputType: \"singleChoice\",\n        values: [\"true\", \"false\"],\n        defaultValue: \"false\",\n        presets: {\n          recommended: \"true\",\n          node10: \"true\",\n          node12: \"true\",\n          deno: \"false\",\n          reactnative: \"false\",\n          svelte: \"true\",\n          scratch: \"false\",\n        },\n      },\n    ],\n  },\n  {\n    // Advanced\n    key: \"compilerOptions\",\n    values: [\n      {\n        name: \"skipLibCheck\",\n        description: \"Skip type checking all .d.ts files.\",\n        inputType: \"singleChoice\",\n        values: [\"true\", \"false\"],\n        defaultValue: \"false\",\n        presets: {\n          recommended: \"true\",\n          node10: \"true\",\n          node12: \"true\",\n          deno: \"false\",\n          reactnative: \"false\",\n          svelte: \"true\",\n          scratch: \"false\",\n        },\n      },\n    ],\n  },\n];\n\nexport default questions;\n","import { Preset, Presets } from \"../typings\";\n\nconst presets: Presets = [\n  {\n    name: \"Recommended\",\n    description: \"The recommended base for TSConfig.\",\n    presetEnum: Preset.RECOMMENDED,\n  },\n  {\n    name: \"Node 10\",\n    description: \"A base TSConfig for working with Node 10.\",\n    presetEnum: Preset.NODE10,\n  },\n  {\n    name: \"Node 12\",\n    description: \"A base TSConfig for working with Node 12.\",\n    presetEnum: Preset.NODE12,\n  },\n  {\n    name: \"Deno\",\n    description: \"A base TSConfig for working with Deno.\",\n    presetEnum: Preset.DENO,\n  },\n  {\n    name: \"React Native\",\n    description: \"A base TSConfig for working with React Native.\",\n    presetEnum: Preset.REACT_NATIVE,\n  },\n  {\n    name: \"Svelte\",\n    description: \"A base TSConfig for working with Svelte.\",\n    presetEnum: Preset.SVELTE,\n  },\n  {\n    name: \"Starting from scratch\",\n    description: \"I want to set all the options by myself.\",\n    presetEnum: Preset.STARTING_FROM_SCRATCH,\n  },\n];\n\nexport default presets;\n","import React, { Component } from \"react\";\nimport {\n  Question,\n  Questions,\n  Answers,\n  Answer,\n  ParsedAnswer,\n  Preset,\n  Presets,\n} from \"../../typings\";\nimport QuestionsContext from \"../QuestionsContext\";\nimport questions from \"../../data/questions\";\nimport presets from \"../../data/presets\";\n\ntype QuestionsContextProviderProps = {\n  children: any;\n};\n\nexport type QuestionsContextProvidedState = {\n  questions: Questions;\n  presets: Presets;\n  categories: string[];\n  answers: Answers;\n  selectedPreset: Preset | null;\n  getPresets: () => Presets;\n  getPresetForQuestion: (\n    questionCategoryIndex: number,\n    questionIndex: number\n  ) => string;\n  setPreset: (preset: Preset) => void;\n  setPresetsInAnswers: (preset: Preset) => void;\n  getSelectedPreset: () => Preset | null;\n  getQuestions: () => Questions;\n  getFieldNameCategory: (fieldName: string) => string;\n  getQuestionIndex: (fieldName: string) => number;\n  getQuestionsFromIndex: (index: number) => Question[];\n  getAnswers: () => Answers;\n  sendNewAnswer: (\n    questionIndex: number,\n    fieldName: string,\n    answer: string | boolean\n  ) => void | boolean | string;\n  parseAnswers: () => string;\n};\n\nexport default class QuestionsContextProvider extends Component<\n  QuestionsContextProviderProps,\n  QuestionsContextProvidedState\n> {\n  public readonly state: QuestionsContextProvidedState = {\n    questions: questions,\n    presets: presets,\n    categories: [],\n    answers: [],\n    selectedPreset: null,\n    getPresets: this.getPresets.bind(this),\n    getPresetForQuestion: this.getPresetForQuestion.bind(this),\n    setPreset: this.setPreset.bind(this),\n    setPresetsInAnswers: this.setPresetsInAnswers.bind(this),\n    getSelectedPreset: this.getSelectedPreset.bind(this),\n    getQuestions: this.getQuestions.bind(this),\n    getFieldNameCategory: this.getFieldNameCategory.bind(this),\n    getQuestionIndex: this.getQuestionIndex.bind(this),\n    getQuestionsFromIndex: this.getQuestionsFromIndex.bind(this),\n    getAnswers: this.getAnswers.bind(this),\n    sendNewAnswer: this.sendNewAnswer.bind(this),\n    parseAnswers: this.parseAnswers.bind(this),\n  };\n\n  constructor(props: any) {\n    // @todo: Add this into componentDidMount to get rid of the React render error\n    super(props);\n    const endingAnswersArray = this.state.answers;\n    const endingCatagoriesArray = this.state.categories;\n    const alreadyUsedKeys: string[] = [];\n    this.state.questions.forEach(({ key }) => {\n      if (alreadyUsedKeys.find((value) => value === key)) return;\n      endingAnswersArray.push([]);\n      endingCatagoriesArray.push(key);\n      alreadyUsedKeys.push(key);\n    });\n    this.setState({\n      answers: endingAnswersArray,\n      categories: endingCatagoriesArray,\n    });\n  }\n\n  public getPresets(): Presets {\n    return this.state.presets;\n  }\n\n  public getPresetForQuestion(\n    questionCategoryIndex: number,\n    questionIndex: number,\n    preset?: Preset\n  ): string {\n    return this.state.questions[questionCategoryIndex].values[questionIndex]\n      .presets[preset || this.state.selectedPreset!];\n  }\n\n  public setPreset(preset: Preset): void {\n    this.setState({\n      selectedPreset: preset,\n    });\n  }\n\n  private getDefaultValueForQuestion(\n    questionCategoryIndex: number,\n    questionIndex: number\n  ): string {\n    return this.state.questions[questionCategoryIndex].values[questionIndex]\n      .defaultValue;\n  }\n\n  public setPresetsInAnswers(preset: Preset): void {\n    this.state.categories.forEach((_, key) => {\n      this.state.questions.forEach(({ values }, idx) => {\n        values.forEach(({ name }, questionKey) => {\n          const selectedPreset = this.getPresetForQuestion(\n            idx,\n            questionKey,\n            preset\n          );\n          let newPreset: string | boolean = selectedPreset;\n          if (selectedPreset === \"true\") newPreset = true;\n          if (selectedPreset === \"false\") newPreset = false;\n          if (\n            selectedPreset === this.getDefaultValueForQuestion(idx, questionKey)\n          )\n            return;\n          this.sendNewAnswer(key, name, newPreset);\n        });\n      });\n    });\n  }\n\n  public getSelectedPreset(): Preset | null {\n    return this.state.selectedPreset;\n  }\n\n  public getQuestions(): Questions {\n    return this.state.questions;\n  }\n\n  public getFieldNameCategory(fieldName: string): string {\n    return this.state.questions.find(({ values }) =>\n      values.find(({ name }) => name === fieldName)\n    )!.key;\n  }\n\n  public getQuestionIndex(fieldName: string): number {\n    return this.state.categories.findIndex(\n      (value) => value === this.getFieldNameCategory(fieldName)\n    );\n  }\n\n  public getQuestionsFromIndex(index: number): Question[] {\n    return this.state.questions[index].values;\n  }\n\n  public getAnswers(): Answers {\n    return this.state.answers;\n  }\n\n  public sendNewAnswer(\n    questionIndex: number,\n    fieldName: string,\n    answer: string | boolean\n  ): void | boolean | string {\n    const alreadyAnsweredField = this.state.answers[questionIndex].find(\n      ({ name }) => name === fieldName\n    );\n    if (alreadyAnsweredField) {\n      return (alreadyAnsweredField.value = answer);\n    }\n    const endingAnswersField = this.state.answers;\n    endingAnswersField[questionIndex].push({\n      name: fieldName,\n      value: answer,\n    });\n    this.setState({\n      answers: endingAnswersField,\n    });\n  }\n\n  public parseAnswers(): string {\n    const parsedAnswer: ParsedAnswer = {};\n    this.state.categories.forEach((value, key) => {\n      parsedAnswer[value] = {};\n      this.getAnswers()[key].forEach((answer: Answer) => {\n        parsedAnswer[value][answer.name] = answer.value;\n      });\n    });\n    return JSON.stringify(parsedAnswer, null, 2);\n  }\n\n  public render() {\n    return (\n      <QuestionsContext.Provider value={this.state}>\n        {this.props.children}\n      </QuestionsContext.Provider>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Steps, Step } from \"../../typings\";\nimport StepsContext from \"../StepsContext\";\nimport steps from \"../../data/steps\";\n\ntype StepsContextProviderProps = {\n  children: any;\n};\n\nexport type StepsContextProvidedState = {\n  steps: Steps;\n  currentStep: number;\n  getStep: () => Step;\n  nextStep: () => Step;\n  previousStep: () => Step;\n  getStepsCount: () => number;\n};\n\nexport default class StepsContextProvider extends Component<\n  StepsContextProviderProps,\n  StepsContextProvidedState\n> {\n  public readonly state: StepsContextProvidedState = {\n    steps: steps,\n    currentStep: steps[0].step,\n    getStep: this.getStep.bind(this),\n    nextStep: this.nextStep.bind(this),\n    previousStep: this.previousStep.bind(this),\n    getStepsCount: this.getStepsCount.bind(this),\n  };\n\n  public getStep(): Step {\n    return this.state.steps[this.state.currentStep];\n  }\n\n  public nextStep(): Step {\n    if (this.state.currentStep < this.state.steps.length - 1) {\n      this.setState((state) => ({\n        currentStep: state.currentStep + 1,\n      }));\n    }\n    return this.getStep();\n  }\n\n  public previousStep(): Step {\n    if (this.state.currentStep > 0) {\n      this.setState((state) => ({\n        currentStep: state.currentStep - 1,\n      }));\n    }\n    return this.getStep();\n  }\n\n  public getStepsCount(): number {\n    return this.state.steps.length - 1;\n  }\n\n  public render() {\n    return (\n      <StepsContext.Provider value={this.state}>\n        {this.props.children}\n      </StepsContext.Provider>\n    );\n  }\n}\n","import React from \"react\";\n\nimport Sidebar from \"./Sidebar\";\nimport Content from \"./Content\";\n\nimport styles from \"../styles/App.module.scss\";\n\nimport QuestionsContextProvider from \"../contexts/providers/QuestionsContextProvider\";\nimport StepsContextProvider from \"../contexts/providers/StepsContextProvider\";\n\nconst App = () => (\n  <QuestionsContextProvider>\n    <div className={styles.App_container}>\n      <main className={styles.App_grid}>\n        <StepsContextProvider>\n          <Sidebar />\n          <Content />\n        </StepsContextProvider>\n      </main>\n    </div>\n  </QuestionsContextProvider>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\nimport \"./styles/_index.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Option_block\":\"Option_Option_block__34TJJ\",\"Option_inputblock\":\"Option_Option_inputblock__2GUXj\",\"Option_heading\":\"Option_Option_heading__1__pb\",\"Option_paragraph\":\"Option_Option_paragraph__3trLD\",\"Option_label\":\"Option_Option_label__1n5tt\",\"Option_form\":\"Option_Option_form__u-Jb1\",\"Option_grid\":\"Option_Option_grid__10Z2L\",\"Option_singlechoice\":\"Option_Option_singlechoice__29fSF\",\"Option_checkboxcontainer\":\"Option_Option_checkboxcontainer__1RtmN\",\"Option_checkbox\":\"Option_Option_checkbox__3zbE8\",\"Option_select\":\"Option_Option_select__3gSwX\",\"Option_downloadbutton\":\"Option_Option_downloadbutton__7lS2l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App_container\":\"App_App_container__14mTi\",\"App_grid\":\"App_App_grid__W2NDy\",\"App_gridItem\":\"App_App_gridItem__15xFO\",\"App_sideItem\":\"App_App_sideItem__2ucV7\"};"],"sourceRoot":""}